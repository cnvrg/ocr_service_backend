// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.local_service.local_grpc.s3connect";
option java_outer_classname = "S3ConnectProto";
option objc_class_prefix = "S3C";

package s3connect;

// Interface exported by the server.
service s3connect {
  // s3connect RPC
  //
  // get a files from S3 and download to specific location.
  // the downlad location is shared volume or directory between services. 
  //

  rpc DownloadFilesToLocation(S3request) returns (S3response) {}
  // A server-to-client streaming RPC.
  //
  // Get files from s3 and stream back to client 
  // streamed rather than returned at once 
  // 
  rpc GetFiles(S3request) returns (stream S3FilesResponse) {}


}

// S3 messages 

message S3env {
    string aws_access_key_id = 1;
    string aws_secret_access_key= 2;
}

message S3args {
    string endpoint = 1;
    string command = 2;
    string bucketname = 3;
    optional string file = 4;
    optional string prefix = 5;
    string localdir = 6;
}

message S3request {
    S3args args = 1;
    S3env env = 2;
}

message S3response {
    S3args  request = 1;
    int32   status = 2;
    repeated string files = 3;
}

message S3FilesResponse {
    oneof file_info{
        string filename =1;
        bytes data =2;
    }
}
